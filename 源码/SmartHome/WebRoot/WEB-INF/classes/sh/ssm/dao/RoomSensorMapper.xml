<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="sh.ssm.dao.RoomSensorMapper" >
  <resultMap id="BaseResultMap" type="sh.ssm.po.RoomSensor" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="sensor_id" property="sensorId" jdbcType="VARCHAR" />
    <result column="home_id" property="homeId" jdbcType="VARCHAR" />
    <result column="room_id" property="roomId" jdbcType="INTEGER" />
    <result column="collect_time" property="collectTime" jdbcType="VARCHAR" />
    <result column="data" property="data" jdbcType="VARCHAR" />
    <result column="sensor_type" property="sensorType" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, sensor_id, home_id, room_id, collect_time, data, sensor_type
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from room_sensor
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from room_sensor
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="sh.ssm.po.RoomSensor" >
    insert into room_sensor (id, sensor_id, home_id, 
      room_id, collect_time, data, 
      sensor_type)
    values (#{id,jdbcType=INTEGER}, #{sensorId,jdbcType=VARCHAR}, #{homeId,jdbcType=VARCHAR}, 
      #{roomId,jdbcType=INTEGER}, #{collectTime,jdbcType=VARCHAR}, #{data,jdbcType=VARCHAR}, 
      #{sensorType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="sh.ssm.po.RoomSensor" >
    insert into room_sensor
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="sensorId != null" >
        sensor_id,
      </if>
      <if test="homeId != null" >
        home_id,
      </if>
      <if test="roomId != null" >
        room_id,
      </if>
      <if test="collectTime != null" >
        collect_time,
      </if>
      <if test="data != null" >
        data,
      </if>
      <if test="sensorType != null" >
        sensor_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sensorId != null" >
        #{sensorId,jdbcType=VARCHAR},
      </if>
      <if test="homeId != null" >
        #{homeId,jdbcType=VARCHAR},
      </if>
      <if test="roomId != null" >
        #{roomId,jdbcType=INTEGER},
      </if>
      <if test="collectTime != null" >
        #{collectTime,jdbcType=VARCHAR},
      </if>
      <if test="data != null" >
        #{data,jdbcType=VARCHAR},
      </if>
      <if test="sensorType != null" >
        #{sensorType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="sh.ssm.po.RoomSensor" >
    update room_sensor
    <set >
      <if test="sensorId != null" >
        sensor_id = #{sensorId,jdbcType=VARCHAR},
      </if>
      <if test="homeId != null" >
        home_id = #{homeId,jdbcType=VARCHAR},
      </if>
      <if test="roomId != null" >
        room_id = #{roomId,jdbcType=INTEGER},
      </if>
      <if test="collectTime != null" >
        collect_time = #{collectTime,jdbcType=VARCHAR},
      </if>
      <if test="data != null" >
        data = #{data,jdbcType=VARCHAR},
      </if>
      <if test="sensorType != null" >
        sensor_type = #{sensorType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="sh.ssm.po.RoomSensor" >
    update room_sensor
    set sensor_id = #{sensorId,jdbcType=VARCHAR},
      home_id = #{homeId,jdbcType=VARCHAR},
      room_id = #{roomId,jdbcType=INTEGER},
      collect_time = #{collectTime,jdbcType=VARCHAR},
      data = #{data,jdbcType=VARCHAR},
      sensor_type = #{sensorType,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>